/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, H5P as PrismaH5P } from "@prisma/client";

export class H5PServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.H5PCountArgs, "select">): Promise<number> {
    return this.prisma.h5P.count(args);
  }

  async h5PS<T extends Prisma.H5PFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.H5PFindManyArgs>
  ): Promise<PrismaH5P[]> {
    return this.prisma.h5P.findMany<Prisma.H5PFindManyArgs>(args);
  }
  async h5P<T extends Prisma.H5PFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.H5PFindUniqueArgs>
  ): Promise<PrismaH5P | null> {
    return this.prisma.h5P.findUnique(args);
  }
  async createH5P<T extends Prisma.H5PCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.H5PCreateArgs>
  ): Promise<PrismaH5P> {
    return this.prisma.h5P.create<T>(args);
  }
  async updateH5P<T extends Prisma.H5PUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.H5PUpdateArgs>
  ): Promise<PrismaH5P> {
    return this.prisma.h5P.update<T>(args);
  }
  async deleteH5P<T extends Prisma.H5PDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.H5PDeleteArgs>
  ): Promise<PrismaH5P> {
    return this.prisma.h5P.delete(args);
  }
}
